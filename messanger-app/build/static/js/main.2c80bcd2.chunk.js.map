{"version":3,"sources":["Message.js","firebase.js","App.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","setMessage","setUsername","console","log","useEffect","prompt","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","src","alt","FormControl","InputLabel","htmlFor","style","placeholder","Input","value","onChange","event","target","Button","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","ReactDOM","render","document","getElementById"],"mappings":"4RA0BeA,EArBDC,sBAAW,WAAqBC,GAAO,IAAzBC,EAAwB,EAAxBA,QAClBC,EAD0C,EAAhBC,WACRF,EAAQE,SAChC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,gBAA/C,SACF,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAO,mBAAmB,oBAA3C,SAEM,cAACI,EAAA,EAAD,UACG,eAACC,EAAA,EAAD,CAAYC,MAAM,QAAQC,QAAQ,KAAKC,UAAU,KAAjD,WAEER,GAAD,UAAaD,EAAQE,SAArB,KAFD,KAEqCF,EAAQA,oB,QCG7CU,EAfGC,IAASC,cAAc,CAErCC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,0DACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKEC,Y,QCqENC,MA1Ef,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACNC,EADM,KACAC,EADA,OAEcF,mBAAS,CAAC,CAACrB,SAAS,QAAQF,QAAQ,OAAO,CAACE,SAAS,QAAQF,QAAQ,SAFnF,mBAENA,EAFM,KAEE0B,EAFF,OAGgBH,mBAAS,IAHzB,mBAGNrB,EAHM,KAGGyB,EAHH,KAyCb,OAhCCC,QAAQC,IAAIL,GACZM,qBAAU,WAAKH,EAAYI,OAAO,sBAAqB,IACvDD,qBAAU,WACRpB,EAAGsB,WAAW,YAAYC,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC/DT,EAAWS,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAG,CAAEC,GAAGD,EAAIC,GAAGvC,QAAQsC,EAAIE,iBAK7D,IAkBFZ,QAAQC,IAAI7B,GAMX,sBAAKG,UAAU,MAAf,UACC,sBAAKA,UAAU,SAAf,UACA,qBAAKsC,IAAI,uGAAuGC,IAAI,6BACpH,2DACC,wCAAWxC,QAOX,sBAAMC,UAAU,WAAhB,SACA,eAACwC,EAAA,EAAD,WACJ,cAACC,EAAA,EAAD,CAAaC,QAAQ,WAAWC,MAAO,CAACvC,MAAM,SAAUwC,YAAY,qBAApE,4BACA,cAACC,EAAA,EAAD,CAAOC,MAAOzB,EAAO0B,SAnDpB,SAAoBC,GAElB1B,EAAS0B,EAAMC,OAAOH,QAiDiBH,MAAO,CAACvC,MAAM,WACxD,cAAC8C,EAAA,EAAD,CAAQC,UAAW9B,EAAOhB,QAAQ,YAAYD,MAAM,UAAUgD,KAAK,SAASC,QAlCzD,SAACL,GAClBA,EAAMM,iBACN/C,EAAGsB,WAAW,YAAY0B,IAAI,CAC5B1D,QAAQwB,EACRtB,SAASA,EACTyD,UAAUhD,IAASU,UAAUuC,WAAWC,oBAGnCnC,EAAW,GAAD,mBAAK1B,GAAL,CAAa,CAACE,SAASA,EAASF,QAAQwB,MAClDC,EAAS,KAyBlB,gCAGG,cAAC,IAAD,UAEGzB,EAAQqC,KAAI,gBAAErC,EAAF,EAAEA,QAAQuC,EAAV,EAAUA,GAAV,OACV,cAAC,EAAD,CAAkBrC,SAAUA,EAAWF,QAASA,GAAlCuC,YCrExBuB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.2c80bcd2.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport {Card,CardContent,Typography} from '@material-ui/core';\r\nimport './Message.css'\r\n\r\n\r\nconst Message=forwardRef(( {message,username},ref)=>{\r\n    const isUser=username===message.username; \r\n    return (\r\n        <div ref={ref} className={`message ${isUser && \"message_user\"}`}>\r\n      <Card className={isUser?'message_usercard':'message_guestcard'}>\r\n      {/* <Card className='message_usercard'> */}\r\n            <CardContent>\r\n               <Typography color=\"white\" variant='h5' component=\"h2\">\r\n               \r\n               {!isUser &&`${message.username}:`}  {message.message}\r\n               \r\n            \r\n               </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        </div>\r\n  \r\n       \r\n    )\r\n});\r\n\r\nexport default Message\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp=firebase.initializeApp({\r\n    // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n    apiKey: \"AIzaSyDSTmB28cRy_UVLZWxHKrtClThd963DdzY\",\r\n    authDomain: \"messanger-app-59f60.firebaseapp.com\",\r\n    databaseURL: \"https://messanger-app-59f60-default-rtdb.firebaseio.com\",\r\n    projectId: \"messanger-app-59f60\",\r\n    storageBucket: \"messanger-app-59f60.appspot.com\",\r\n    messagingSenderId: \"401770513136\",\r\n    appId: \"1:401770513136:web:e78beb51df07a773ccb835\",\r\n    measurementId: \"G-G9SJG22720\"\r\n  \r\n\r\n});\r\n\r\nconst db=firebaseApp.firestore();\r\nexport default db;","import React,{useState,useEffect}from 'react'\nimport './App.css';\nimport {Button,FormControl,InputLabel,Input} from '@material-ui/core';\nimport Message from './Message.js'\nimport db from './firebase.js'\nimport FlipMove from 'react-flip-move'\nimport firebase from 'firebase'\n\n\n\n\nfunction App() {\n   const[input,setInput]=useState('');\n   const[message,setMessage]=useState([{username:'rahul',message:\"hii\"},{username:'rahul',message:\"hii\"}])\n   const[username,setUsername]=useState('')\n   \n   function edit_value(event)\n   {\n     setInput(event.target.value)\n   }\n   console.log(input);\n   useEffect(()=>{setUsername(prompt(\"enter your name\"))},[])\n   useEffect(()=>{\n     db.collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot=>{\n       setMessage(snapshot.docs.map(doc=>({ id:doc.id,message:doc.data()})))\n     }\n\n     )\n\n   },[])\n \n  \n   \n  \n   const sendMessage=(event)=>{\n    event.preventDefault();\n    db.collection('messages').add({\n      message:input,\n      username:username,\n      timestamp:firebase.firestore.FieldValue.serverTimestamp()\n    })\n  \n           setMessage([...message,{username:username,message:input}]);\n           setInput('');\n   }\n   \n  \n   console.log(message);\n   \n\n   \n\n  return (\n    <div className=\"App\">\n     <div className=\"header\">\n     <img src=\"https://www.gannett-cdn.com/presto/2020/10/11/USAT/62f94775-642e-4e4f-a130-bb855f18960f-image001.png\" alt=\"sry img is not available\"></img>\n     <h1 >Welcome to chat world!!!!</h1>\n      <h2>hello {username}</h2>\n     </div>\n     \n      {/* <form>\n      <input value={input} onChange={edit_value}/>\n      <Button disabled={!input} variant='contained' color='primary' type='submit' onClick={sendMessage}>send messages</Button>\n      </form> */}\n      <form className=\"app_form\">\n      <FormControl>\n  <InputLabel  htmlFor=\"my-input\" style={{color:\"white\"}} placeholder=\"Enter message here\" >Enter messages</InputLabel>\n  <Input value={input} onChange={edit_value}style={{color:\"white\"}}/>\n  <Button disabled={!input} variant='contained' color='primary' type='submit' onClick={sendMessage}>send messages</Button>\n</FormControl>\n</form>\n     <FlipMove>\n     {\n        message.map(({message,id})=>(\n          <Message key={id} username={username}  message={message}/>\n          \n      \n        ))\n      }\n     </FlipMove>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}